{"version":3,"sources":["component/Movie.js","route/Home.js","route/About.js","route/Detail.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","to","map","idx","slice","Home","state","isLoading","movies","getMovies","a","axios","get","data","console","log","setState","this","movie","medium_cover_image","React","Component","About","Detail","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oSAyCeA,MAnCf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC/C,OACI,qBAAKC,UAAU,aAAf,SACI,sBAAKA,UAAU,QAAf,UACI,qBAAKA,UAAU,YAAf,SAA2B,qBAAKC,IAAMH,EAASI,IAAMN,EAAQA,MAAQA,MACrE,sBAAKI,UAAU,UAAf,UACI,oBAAIA,UAAU,qBAAd,SACI,cAAC,IAAD,CAAMG,GAAG,UAAT,SAAqBP,MAEzB,sBAAMI,UAAU,iBAAhB,SAAmCL,IACnC,oBAAIK,UAAU,aAAd,SAEID,EAAOK,KAAK,SAACL,EAAQM,GACjB,OAAO,oBAAcL,UAAU,mBAAxB,SAA4CD,GAAnCM,QAIxB,oBAAGL,UAAU,+BAAb,UAA8CH,EAAQS,MAAM,EAAG,KAA/D,mBClBdC,G,kNAEJC,MAAO,CACLC,WAAY,EACZC,OAAS,I,EAGXC,U,sBAAY,8BAAAC,EAAA,sEAEqCC,IAAMC,IAAI,4DAF/C,gBAEgBJ,EAFhB,EAEFK,KAASA,KAASL,OAM1BM,QAAQC,IAAIP,GAKZ,EAAKQ,SAAU,CAAER,SAAQD,WAAW,IACpCO,QAAQC,IAAI,EAAKT,MAAME,QAdb,2C,uDAiBZ,WACES,KAAKR,c,oBAKP,WACE,MAA4BQ,KAAKX,MAA1BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,OAElB,OACE,yBAASV,UAAU,YAAnB,SACIS,EACI,qBAAKT,UAAU,SAAf,SAAwB,mBAAGA,UAAU,MAAb,uBAE1B,qBAAKA,UAAU,WAAf,SACE,qBAAKA,UAAU,SAAf,SAEIU,EAAON,KAAK,SAAAgB,GAEV,OADAJ,QAAQC,IAAIG,GAEV,cAAC,EAAD,CAEA1B,GAAM0B,EAAM1B,GACZC,KAAQyB,EAAMzB,KACdC,MAASwB,EAAMxB,MACfC,QAAWuB,EAAMvB,QACjBC,OAAUsB,EAAMC,mBAChBtB,OAAUqB,EAAMrB,QANTqB,EAAM1B,iB,GA7ChB4B,IAAMC,YAkEVhB,IC5DAiB,MATf,WACI,OACI,gCACA,uCACA,uFCIOC,MARf,WAEE,OACE,yCCgBWC,MAff,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CAAOD,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAClB,8CCRVC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3f31b546.chunk.js","sourcesContent":["import React from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./Movie.css\";\nimport {Link} from \"react-router-dom\";\n\n// 이 파일에서는 state가 없기 때문에 class 컴포넌트를 사용하지 않고, function 컴포넌트를 사용한다.\nfunction Movie( {id, year, title, summary, poster, genres} ) {\n    return (\n        <div className=\"movie_item\">\n            <div className=\"inner\">\n                <div className=\"img_frame\"><img src={ poster } alt={ title } title={ title } /></div>\n                <div className=\"txt_box\">\n                    <h4 className=\"txt title big bold\">\n                        <Link to=\"/detail\">{ title }</Link>\n                    </h4>\n                    <span className=\"txt year small\">{ year }</span>\n                    <ul className=\"lst_genres\">\n                        { \n                        genres.map( (genres, idx) => {\n                            return <li key={idx} className=\"txt genres small\">{genres}</li>;\n                        } )\n                        }\n                    </ul>\n                    <p className=\"txt summary small color_grey\">{ summary.slice(0, 200) } ...</p>\n                </div>\n            </div>\n        </div>\n    );\n}\n\n// Movie 컴포넌트가 받아올 인자를 정의한다.\nMovie.propTypes = {\n    id : propTypes.number.isRequired,\n    year : propTypes.number.isRequired,\n    title: propTypes.string.isRequired,\n    summary: propTypes.string.isRequired,\n    poster: propTypes.string.isRequired,\n    genres: propTypes.arrayOf(propTypes.string).isRequired\n}\n\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"../component/Movie\"; // 받은 데이터를 활용하는 js파일\nimport \"./Home.css\";\n\nclass Home extends React.Component {\n\n  state= {\n    isLoading : true,\n    movies : []\n  }\n\n  getMovies = async () => {\n    // axios가 api를 요청할때까지 시간이 소요되므로 async await 키워드로 javascript에게 axios가 데이터를 받아오는 동안 좀만 기달려달라고 말하는거\n    const { data : { data : { movies } } } = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating');\n\n    //{ data : { data : { movies } } }\n    // 받아온 데이터 구조는 data 안에 data 안에 movies \n    // axios로 api를 받아온 json 데이터의 변수명이 movies일때, movies.data.data.movies로 확인 가능하지만,\n    // { data: { data: { movies } } } 로도 같은 결과를 확인할 수 있다. <- 이 방법이 더 보기에 좋다.\n    console.log(movies);\n\n    // 받아온 데이터를 state 의 movies배열에 넣기\n    // movies: movies 라고 해도 됨, 하지만 state의 이름과 변수명이 같을 경우 하나만 써도 된다.\n    // movies 데이터를 다 받앙오면 isLoading을 false로 바꿔서 로딩을 끝낸다.\n    this.setState( { movies, isLoading: false } );\n    console.log(this.state.movies);\n  }\n\n  componentDidMount(){\n    this.getMovies();\n  }\n\n  \n\n  render() {\n    const {isLoading, movies} = this.state;\n\n    return(\n      <section className=\"container\">\n        { isLoading \n          ? ( <div className=\"loader\"><p className=\"txt\">Loading</p></div> )\n          : (\n            <div className=\"contWrap\">\n              <div className=\"movies\">\n                {\n                  movies.map( movie => {\n                    console.log(movie);\n                    return(\n                      <Movie \n                      key = {movie.id}\n                      id = {movie.id}\n                      year = {movie.year}\n                      title = {movie.title}\n                      summary = {movie.summary}\n                      poster = {movie.medium_cover_image}\n                      genres = {movie.genres}\n                      />\n                    );\n                  } )\n                }\n              </div>\n            </div>\n            )\n        }\n      </section>\n    );\n  }\n\n}\n\nexport default Home;\n","import React from \"react\";\n\nfunction About() {\n    return (\n        <div>\n        <h1>About</h1>\n        <h3>This web site is Movie App for practice to react.</h3>\n        </div>\n    );\n}\n\nexport default About;","import React from \"react\";\n\nfunction Detail() {\n\n  return (\n    <h1>Detail</h1>\n  );\n\n}\n\nexport default Detail;","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Home from \"./route/Home\";\nimport About from \"./route/About\";\nimport Detail from \"./route/Detail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<Home/>} />\n        <Route path=\"/about\" element={<About/>} />\n        <Route path=\"/detail\" element={<Detail/>} />\n        <Route path=\"/test\" element={\n          <h1>TEST</h1>\n        } />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}